<!DOCTYPE html>
<html>
<head>
    <style>
        .game-container {
            width: 400px;
            height: 600px;
            position: relative;
            border: 1px solid #000;
            overflow: hidden;
        }

        .square {
            width: 50px;
            height: 50px;
            position: absolute;
            background-color: red;
            cursor: pointer;
        }
    </style>
</head>
<body>
<div class="game-container" id="game-container"></div>
<script>
    // 配色のリスト
    const colors = ["red", "blue", "green", "yellow", "orange", "purple", "pink"];

    // ゲームコンテナ
    const gameContainer = document.getElementById("game-container");

    // スコア
    let score = 0;

    // クリック時の処理
    function handleClick(event) {
        if (event.target.classList.contains("square")) {
            event.target.remove();
            score++;
            updateScore();
        }
    }

    // スコアを更新
    function updateScore() {
        document.getElementById("score").textContent = `Score: ${score}`;
    }

    // 新しい四角を作成して画面に追加
    function createSquare() {
        const square = document.createElement("div");
        square.classList.add("square");
        square.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
        square.style.left = `${Math.random() * (gameContainer.clientWidth - 50)}px`;
        gameContainer.appendChild(square);

        // クリックイベントのリスナーを追加
        square.addEventListener("click", handleClick);

        // アニメーション
        const speed = Math.random() * 2 + 1; // 1から3のランダムな速度
        const animationInterval = setInterval(() => {
            const currentTop = parseFloat(square.style.top || 0);
            square.style.top = `${currentTop + speed}px`;

            if (currentTop > gameContainer.clientHeight) {
                square.remove();
                clearInterval(animationInterval);
            }
        }, 10);
    }

    // ゲームループ
    function gameLoop() {
        createSquare();
        setTimeout(gameLoop, 1000); // 1秒ごとに新しい四角を作成
    }

    // ゲーム開始
    gameLoop();

    // スコア表示の要素を追加
    const scoreElement = document.createElement("div");
    scoreElement.id = "score";
    scoreElement.textContent = "Score: 0";
    gameContainer.appendChild(scoreElement);
</script>
</body>
</html>
